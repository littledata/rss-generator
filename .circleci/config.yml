version: 2.1

orbs:
  slack: circleci/slack@4.4.2
  node: circleci/node@4.5.1
  ld-common-circleci: littledata/ld-common-circleci@0.0.25

slack-notifications: &slack-notifications
  post-steps:
    - ld-common-circleci/notify-fail
jobs:
  install_npm:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "yarn.lock" }}
      - run:
          name: Authenticate with registry
          command: echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" >> ./.npmrc
      - node/install-packages
      - save_cache:
          key: deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  deploy: &deploy
    parameters:
      stage:
        type: string
        default: staging
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "yarn.lock" }}
      - run:
          name: build
          command: npm run build
      - run:
          name: Authenticate with registry
          command: echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" >> ./.npmrc
      - run: chmod +x ./bin/publish.sh
      - run:
          name: Publish package
          command: ./bin/publish.sh
      - ld-common-circleci/notify
  deploy_prod:
    <<: *deploy
workflows:
  main:
    jobs:
      - install_npm
      - test:
          <<: *slack-notifications
          requires:
            - install_npm
      - lint:
          <<: *slack-notifications
          requires:
            - install_npm
      - deploy_prod:
          <<: *slack-notifications
          stage: prod
          requires:
            - lint
            - test
            - install_npm
          filters:
            branches:
              only: master
          context: production